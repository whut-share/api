# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  created_at: DateTime!
  updated_at: DateTime!
  id: ObjectId!
  email: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""A simple ObjectId parser (eg. "62d13a8b029b95001b881441")"""
scalar ObjectId

type ProjectSyncerSettings {
  include_networks: [String!]!
  contracts_base_url: String
}

type ProjectDassetsSettings {
  include_networks: [String!]!
  token_base_url: String
  webhook_events_url: String
}

type Project {
  created_at: DateTime!
  updated_at: DateTime!
  id: String!
  user: String!
  name: String!
  pic: String
  dassets_settings: ProjectDassetsSettings!
  syncer_settings: ProjectSyncerSettings!
}

type DassetsNftAssetInfo {
  id: String!
  name: String!
  description: String
  image_url: String
}

type DassetsCheckoutSessionPriceEstimate {
  price: Float!
  total_eth: Float!
  eth_price: Float!
  gas_price: Float!
  gas: Float!
  slippage: Float!
}

type DassetsCheckoutSession {
  created_at: DateTime!
  updated_at: DateTime!
  id: String!
  project: String!
  address: String
  mint_tx: String
  mint_token_id: Float
  mint_request_id: String
  payment_id: String
  payment_expires_at: DateTime
  network: String
  contract_type: String!
  is_succeeded: Boolean!
  expires_at: DateTime!
  asset_info: DassetsNftAssetInfo!
  url: String!
  is_minted: Boolean!
  is_payed: Boolean!
  is_expired: Boolean!
  price_estimation: DassetsCheckoutSessionPriceEstimate
  stripe_pi_client_secret: String
}

type WebhookEndpoint {
  created_at: DateTime!
  updated_at: DateTime!
  id: String!
  project: String!
  url: String!
  key: String!
}

type Query {
  me: User!
  users: [User!]!
  projects: [Project!]!
  project(id: ObjectId!): Project!
  webhook_endpoints: [WebhookEndpoint!]!
  webhook_endpoint(id: ObjectId!): WebhookEndpoint!
  dassets_checkout_session(id: ObjectId!): DassetsCheckoutSession!
}

type Mutation {
  userSignUp(data: IUserSignUp!): User!
  projectCreate(data: IProjectCreate!): Project!
  projectUpdate(id: ObjectId!, data: IProjectUpdate!): Project!
  webhookEndpointCreate(data: IWebhookEndpointCreate!): WebhookEndpoint!
  webhookEndpointUpdate(id: ObjectId!, data: IWebhookEndpointUpdate!): WebhookEndpoint!
  dassetsCheckoutSessionCreate(data: IDassetsCheckoutSessionCreate!): DassetsCheckoutSession!
  dassetsCheckoutSessionUpdate(id: ObjectId!, data: IDassetsCheckoutSessionUpdate!): DassetsCheckoutSession!
  dassetsCheckoutSessionAttachStripePaymentIntent(id: ObjectId!): DassetsCheckoutSession!
}

input IUserSignUp {
  email: String!
  password: String!
}

input IProjectCreate {
  name: String!
}

input IProjectUpdate {
  name: String
  dassets_settings: IProjectDassetsSettingsUpdate
}

input IProjectDassetsSettingsUpdate {
  include_networks: [String!]
  token_base_url: String
  webhook_events_url: String
}

input IWebhookEndpointCreate {
  project: ObjectId!
  url: String
  key: String
}

input IWebhookEndpointUpdate {
  url: String
  key: String
}

input IDassetsCheckoutSessionCreate {
  project: String!
  asset_info: IDassetsCheckoutSessionCreateAssetInfo!
}

input IDassetsCheckoutSessionCreateAssetInfo {
  id: String!
  name: String!
  description: String
  image_url: String
}

input IDassetsCheckoutSessionUpdate {
  address: String
  network: String
}